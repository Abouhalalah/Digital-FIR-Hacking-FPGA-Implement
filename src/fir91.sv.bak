module fir9( 
input logic clk, rst, [3:0]x, [10:0]thresh, [3:0] c [8:0],
output logic y
); 

logic [3:0] xreg [0:8];
logic [10:0] sum;

	always_ff@(posedge clk) begin

	for (int tap = 0; tap < 9; tap++) begin

		if(rst)

			xreg[tap] <= 0;

		else if (tap == 0)

                	xreg[0] <= x;

		else

			xreg[tap] <= xreg[tap-1];

		end
	end

	always_comb begin
		for (int tap =0; tap < 9; tap++) begin

		sum = sum + xreg[tap]*c[tap];

		end
	end

	always_ff@(posedge clk) begin

		if(sum >= thresh)

			y<=1;

		else

			y<=0;

		end
	

endmodule
